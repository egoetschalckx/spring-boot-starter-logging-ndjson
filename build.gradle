buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'com.bmuschko.nexus'

group = 'io.github.goetschalckx'

sourceCompatibility = 1.8

version = '0.1.1-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'net.logstash.logback:logstash-logback-encoder:4.11'
    implementation 'ch.qos.logback:logback-classic:1.0.0'

    testImplementation 'junit:junit:4.12'
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar2(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

publishing {
    publications {
        maven(MavenPublication) {
            pom {
                name = 'Spring Boot Logging NDJSON'
                description = 'Enables NDJSON logging in Spring Boot applications'
                packaging = 'jar'
                url = 'https://github.com/goetschalckx/spring-boot-logging-json'
                /*licenses {
                    license {
                        name = 'Eclipse Public License - v 2.0'
                        url = 'https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.html'
                    }
                }*/
                developers {
                    developer {
                        id = 'egoetschalckx'
                        name = 'Eric Goetschalckx'
                        email = 'eric@goetschalckx.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/goetschalckx/spring-boot-logging-json.git'
                    developerConnection = 'scm:git:https://github.com/goetschalckx/spring-boot-logging-json.git'
                    url = 'https://github.com/goetschalckx/spring-boot-logging-json'
                }
            }

            artifactId 'spring-boot-logging-json'

            from components.java
            artifact sourceJar
            artifact javadocJar2

            println "Version " + version
        }
    }

    repositories {
        mavenLocal()

        maven {
            //url "https://oss.sonatype.org/service/local/staging/deploy/maven2"

            //def repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'

            //url = version.endsWith('SNAPSHOT') ? snapshotRepositoryUrl : repositoryUrl
            url = snapshotRepositoryUrl

            println "Version " + version
            println "Maven URL: " + url

            credentials {
                username project.hasProperty("ossrhUser") ? ossrhUser : ""
                password project.hasProperty("ossrhPassword") ? ossrhPassword : ""
            }
        }
    }

}

signing {
    //println "useGpgCmd()..."
    //useGpgCmd()

    println "sign(publishing.publications)..."
    sign(publishing.publications)
}

tasks.withType(Sign) {
    onlyIf {
        project.hasProperty('signing.keyId')
    }

    doFirst {
        println "Signing artifacts..."
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.allTasks.any { it instanceof Sign }) {
        println "Signing artifacts (old style)..."
    }
}

extraArchive {
    sources = true
    tests = true
    javadoc = true
}

nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
}
